/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Chariot from "../../api/index";
import * as core from "../../core";
import { Suborganization } from "./Suborganization";
import { Address } from "./Address";

export const Nonprofit: core.serialization.ObjectSchema<serializers.Nonprofit.Raw, Chariot.Nonprofit> =
    core.serialization.object({
        id: core.serialization.string(),
        name: core.serialization.string(),
        preferredName: core.serialization.string().optional(),
        ein: core.serialization.string(),
        suborganizations: core.serialization.list(Suborganization).optional(),
        address: Address.optional(),
        picture: core.serialization.string().optional(),
        website: core.serialization.string().optional(),
        createdAt: core.serialization.date().optional(),
        updatedAt: core.serialization.date().optional(),
        isDafPayNetwork: core.serialization.boolean().optional(),
        inGoodStanding: core.serialization.boolean().optional(),
        claimed: core.serialization.boolean().optional(),
    });

export declare namespace Nonprofit {
    interface Raw {
        id: string;
        name: string;
        preferredName?: string | null;
        ein: string;
        suborganizations?: Suborganization.Raw[] | null;
        address?: Address.Raw | null;
        picture?: string | null;
        website?: string | null;
        createdAt?: string | null;
        updatedAt?: string | null;
        isDafPayNetwork?: boolean | null;
        inGoodStanding?: boolean | null;
        claimed?: boolean | null;
    }
}
