/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Chariot from "../../api/index";
import * as core from "../../core";
import { EventSubscriptionStatus } from "./EventSubscriptionStatus";
import { EventCategory } from "./EventCategory";

export const EventSubscription: core.serialization.ObjectSchema<
    serializers.EventSubscription.Raw,
    Chariot.EventSubscription
> = core.serialization.object({
    id: core.serialization.string().optional(),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    status: EventSubscriptionStatus.optional(),
    url: core.serialization.string(),
    category: EventCategory.optional(),
});

export declare namespace EventSubscription {
    interface Raw {
        id?: string | null;
        created_at?: string | null;
        status?: EventSubscriptionStatus.Raw | null;
        url: string;
        category?: EventCategory.Raw | null;
    }
}
